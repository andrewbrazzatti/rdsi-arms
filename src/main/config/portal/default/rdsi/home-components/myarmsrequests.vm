## load Velocity macro setPagingCtrl
#parseTemplate("home-components/pagingControl.vm")

## Create a macro for creating readonly tables
#macro(setDashboardReadonlyTbl $prefix $results) 
<script>jQuery(document).ready(function() { 
	ko.applyBindings(${prefix}Results, $('${prefix}ResultsTbl')[0]);
	setupPagingCtrls('${prefix}RecordPaging', ${prefix}Results);
	initDashboardRows(${prefix}Results, $results);
});</script>
#set($stringID = "arms.home.requests.${prefix}.title")
#set($menuTitle = "#displayMessage($stringID)" )
#parseTemplate("wrapping/info-box-open.vm")
<div class="block">
<table id="${prefix}ResultsTbl" data-bind="stopBindings: true">
    <thead>
        <tr>
            <th>#displayMessage('arms.home.requests.table.dataset')</th>
            <th>#displayMessage('arms.home.requests.table.created')</th>
            <th>#displayMessage('arms.home.requests.table.modified')</th>
            <th>#displayMessage('arms.home.requests.table.status')</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: rows">
        <tr>
	    <td><a data-bind="attr: {href: href}, text: dc_title"></a></td>
	    <td data-bind="text: create_timestamp"/>
	    <td data-bind="text: last_modified"/>
	    <td data-bind="text: workflow_step_label"/>
        </tr>
    </tbody>
</table>
#setPagingCtrl("${prefix}RecordPaging")
</div>
#parseTemplate("wrapping/info-box-close.vm")
#end

#set($menuTitle = "#displayMessage('arms.home.myarmsrequests.title')")
#parseTemplate("wrapping/info-box-open.vm")
<div class="block">
#set($results = $self.getListOfStage('arms-request'))

#if ($results && $results.size() > 0)
<script>
jQuery(document).ready(function() { 
	ko.applyBindings(myRecords, jQuery('#myRecordsTbl')[0]);
	setupPagingCtrls('myRecordsPaging', myRecords);
	initDashboardRows(myRecords, $results);
});
</script>

<table id="myRecordsTbl" data-bind="stopBindings: true">
    <thead>
        <tr>
            <th>#displayMessage('arms.home.requests.table.dataset')</th>
            <th>#displayMessage('arms.home.requests.table.created')</th>
            <th>#displayMessage('arms.home.requests.table.modified')</th>
            <th>#displayMessage('arms.home.requests.manage.edit')</th>
	    <th>Share</th>
	    <th>Delete</th>            
        </tr>
    </thead>
    <tbody data-bind="foreach: rows">
        <tr>
	    <td><a data-bind="attr: {href: href}, text: dc_title"></a></td>
	    <td data-bind="text: create_timestamp"/>
	    <td data-bind="text: last_modified"/>
	        <td><a data-bind="attr: {href: editUrl}"><img alt="#displayMessage('arms.home.request.manage.edit')" src="$portalPath/images/icons/workflow_edit.png" title="#displayMessage('arms.home.requests.manage.edit')"></a></td>
	        <td><a href="#" data-bind="click: $parent.manageAccess" title="#displayMessage('researcher-dashboard.home.myplans.manage.access')"><img alt="#displayMessage('researcher-dashboard.home.myplans.manage.access')" src="$portalPath/images/icons/application_key.png"></a></td>
	        <td><a href="#" onclick="click: $parent.changeOwner;" title="Delete request"><img alt="Delete request" src="$portalPath/images/icons/delete.png"></a></td>
        </tr>
    </tbody>
</table>
#setPagingCtrl("myRecordsPaging")
#end
</div>
#parseTemplate("wrapping/info-box-close.vm")
#parseTemplate("form-components/access-control.vm")

#set($results = $self.getListOfStage('arms-submitted,arms-allocation-committee,arms-provisioning,arms-completed'))
#if ($results && $results.size() > 0)
  #setDashboardReadonlyTbl('submitted' $results)
#end

#set($results = $self.getShared())
#if ($results && $results.size() > 0)
  #setDashboardReadonlyTbl('shared' $results)
#end

<script>
    function prepareHelps() {
    	var help_contents = $('.pre-help-content');
    	for (var i = 0; i < help_contents.length; i++ ) {
    		$(help_contents[i]).hide().attr("class","help-content");
    		var helpToggleHtml = "<button class=\"jaffaHelpToggle\"></button>";
    	    helpToggle = $(helpToggleHtml);
    	    helpToggle.button({icons: {primary:'ui-icon-help'}});

    	    // Setup click logic
    	    helpToggle.click(function(){$(this).next().toggle('fast');});

    	    // And attach to our container
    	    helpToggle.insertBefore(help_contents[i]);	
    	}
    }
 $(document).ready(function() {
	prepareHelps();
 });

</script>

<script type='text/javascript' src='//ajax.aspnetcdn.com/ajax/knockout/knockout-2.2.1.js'></script>

<script>
var myRecords = new myRecordsModel();
var submittedResults = new redonlyResultsModel('submitted');
var sharedResults = new redonlyResultsModel('shared');

function setupPagingCtrls(ctrlID, modelInst) {
	$("#"+ ctrlID +" a").click(function() {
	    $("#"+ ctrlID +" .selected-page").addClass("select-page").removeClass("selected-page").attr("href","#");
  		$(this).removeClass("select-page").addClass("selected-page").removeAttr("href");
		var pN = $(this).attr("rel");
  		modelInst.reloadRecords(pN);
        return false;
    });
}

// only has data and reload function
function redonlyResultsModel(searchType) {
	var self = this
	self.rows = ko.observableArray([]);

	self.reloadRecords = function(pageN) {
		self.rows.removeAll();
		if (pageN == null) { pageN = 1; }
		jQuery.getJSON('$portalPath/dashboards/records.script?searchType='+searchType+'&pageNum='+pageN, function(data) {
			initDashboardRows(self, data);
		});
	};
}

// Not only has data as readonlyResultsModel but also has access control functions
function myRecordsModel() {
    var self = this;
    self.rows = ko.observableArray([]);
    self.manageAccess = function(item) { manage_access(item.id); };
    self.changeOwner = function(item) { change_owner(item.id); };
    self.reloadRecords = function(pageN) {
		self.rows.removeAll();
		if (pageN == null) { pageN = 1; }
		console.debug("pageNum passed is " + pageN);
		jQuery.getJSON('$portalPath/dashboards/records.script?pageNum='+pageN, function(data) {
			initDashboardRows(self, data);
   		});
    };
}

// Prepare data from server to be bound to knockout tables
// Reconstrcut href for editing editUrl (only used in myRecordsModel)
// Reformat datestamp
// Reconstruct the href of detail page
// Pass on the rest of data untouched.
function initDashboardRows(mod, data) {
	for(var i=0; i < data.length; i++) {
	    data[i].href = '$portalPath/detail/' + data[i].id;
		data[i]["create_timestamp"] = formatDate(data[i]["create_timestamp"]);
		data[i]["last_modified"] = formatDate(data[i]["last_modified"]);
		data[i]["editUrl"] = '$portalPath/workflow/' + data[i].id;;
		mod.rows.push(data[i]);
	}
}

function zeroFill( number, width )
{
  width -= number.toString().length;
  if ( width > 0 )
  {
    return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
  }
  return number + ""; // always return a string
}

// Convert a full UTC date into format of dd/mm/yyyy
function formatDate(od) {
    var d = new Date(od);
    var newD = zeroFill(d.getUTCDate(),2) + '/' + zeroFill(parseInt(d.getUTCMonth())+1,2) + '/' + d.getUTCFullYear();
    return newD;
}

</script>
